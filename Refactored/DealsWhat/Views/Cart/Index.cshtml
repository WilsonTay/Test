@using DealsWhat.Helpers
@model DealsWhat.ViewModels.ViewShoppingCartViewModel

<div class="gap-medium"></div>

<h3>View Cart</h3>

@if (ViewBag.CartAdded)
{
    <div class="row">
        <div class="col-md-12">
            <div class="alert alert-success cart-successfully-added">The item has succesfully been added to your cart.</div>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-8">
        <table class="table cart-table">
            <thead>
                <tr>
                    <th>Item</th>
                    <th>Name</th>
                    <th>QTY</th>
                    <th>Price</th>
                    <th>Remove</th>
                </tr>
            </thead>
            <tbody id="cart-item-tbody"></tbody>
        </table>
        <a id="btn-update-cart" href="#" class="btn btn-primary">Update the cart</a>
    </div>
    <div class="col-md-3">
        <ul class="cart-total-list">
            <li>
                <span>Sub Total</span><span id="cart-subtotal"></span>
            </li>
            <li>
                <span>Shipping</span><span>RM 0.00</span>
            </li>
            <li>
                <span>Taxes</span><span>RM 0.00</span>
            </li>
            <li>
                <span>Total</span><span id="cart-total"></span>
            </li>
        </ul>
        <button id="btn-checkout-cart" class="btn btn-primary btn-lg">Checkout</button>
    </div>
</div>


@section scripts {
    <script>
        var dealBaseUrl = '@Url.Action("Index","Deal")/';

        $(document).ready(function() {
            setDefaultCartView();
            loadCart();
        });

        $('#btn-checkout-cart').click(function(e) {
            window.location.href = '@Url.Action("CheckOutPayment", "Order")';
        });

        function setDefaultCartView() {
            var tbody = $('#cart-item-tbody');

            var dom = '<tr><td colspan="5"><div class="alert alert-info" role="alert" style="text-align:left">You have no cart items</div></td></tr>';

            tbody.append(dom);

            $('#btn-update-cart').attr('disabled', 'disabled');
            $('#btn-checkout-cart').attr('disabled', 'disabled');
        }

        function setHasItemCartView() {
            var tbody = $('#cart-item-tbody');

            tbody.empty();

            $('#btn-update-cart').attr('disabled', false);
            $('#btn-checkout-cart').attr('disabled', false);
        }

        function loadCart() {
            $.ajax({
                url: baseUrl + "api/cart/",
                method: 'get',
                dataType: 'json',
                cache: false,
                success: function(carts) {

                    if (carts.length > 0) {
                        setHasItemCartView();
                        buildCartDom(carts);
                    }

                    var total = getCartTotalSpecialPrice(carts);
                    $('#cart-total').text(total);
                    $('#cart-subtotal').text(total);
                },
                complete: function() {
                }
            });
        }

        function getCartTotalSpecialPrice(carts) {
            var price = 0.0;

            $.each(carts, function(index, cart) {
                price += cart.SpecialPrice * cart.Quantity;
            });

            return "RM " + price.toFixed(2);
        }

        function removeCartItem(cartItemId) {
            $.ajax({
                url: baseUrl + "api/cart/" + cartItemId,
                method: 'delete',
                cache: false,
                success: function(carts) {
                    // Reload carts.
                    location.reload();
                },
                complete: function() {
                }
            });
        }

        function buildCartDom(carts) {
            var tbody = $('#cart-item-tbody');

            var dom = '';
            $.each(carts, function(index, cart) {

                var name = cart.ShortName;

                $.each(cart.Attributes, function (index, attr) {
                    name += '<br/><span class="product-desciption">' + attr.Name + ' (' + attr.Value + ')</span>';
                });

                dom += '<tr data-cart-item-id=' + cart.Id + '>' +
                    '<td class="cart-item-image"><a href="' + dealBaseUrl + cart.DealUrl + '"><img height="70px" width="70px" src="' + cart.DealThumbnailUrl + '"/></a></td>' +
                    '<td><a href="' + dealBaseUrl + cart.DealUrl + '">' + name + '</a></td>' +
                    '<td class="cart-item-quantity"><i class="fa fa-minus cart-item-minus"></i><input type="text" name="cart-quantity" class="cart-quantity" value="' + cart.Quantity + '" /><i class="fa fa-plus cart-item-plus"></i></td>' +
                    '<td> RM ' + (cart.Quantity * cart.SpecialPrice).toFixed(2) + '</td>' +
                    '<td class="cart-item-remove"><a class="fa fa-times"  onClick="removeCartItem(\'' + cart.Id + '\')"></a></td>' +
                    '</tr>';
            });

            tbody.append(dom);
        }

        $('#cart-item-tbody').on('click', '.cart-item-minus', function() {
            var cartQuantityElement = $(this).parent().find('.cart-quantity');
            var cartQuantity = cartQuantityElement.val();

            cartQuantity--;

            if (cartQuantity > 0) {
                cartQuantityElement.val(cartQuantity);
            }
        });

        $('#cart-item-tbody').on('click', '.cart-item-plus', function() {
            var cartQuantityElement = $(this).parent().find('.cart-quantity');
            var cartQuantity = cartQuantityElement.val();

            cartQuantity++;

            cartQuantityElement.val(cartQuantity);
        });

        $('#btn-update-cart').click(function() {
            var tbody = $('#cart-item-tbody');
            var cartItems = tbody.find('tr');
            var models = [];

            $.each(cartItems, function(index, cartRow) {
                var cartId = $(cartRow).attr('data-cart-item-id');
                var cartQuantityElement = $(cartRow).find('.cart-quantity');
                var cartQuantity = cartQuantityElement.val();

                console.log(cartId + " : " + cartQuantity);

                var model = {};
                model.CartId = cartId;
                model.Quantity = cartQuantity;

                models.push(model);
            });

            updateCartItems(models);
        });

        function updateCartItems(model) {
            $.ajax({
                url: baseUrl + "api/cart/",
                method: 'put',
                contentType: 'application/json',
                data: JSON.stringify(model),
                cache: false,
                success: function(carts) {
                    // Reload carts.
                    location.reload();
                },
                complete: function() {
                }
            });
        }
    </script>
}